name: Deploy Terraform to AWS

on:
  push:
    branches:
      - main
    paths:
      - "aws/**"
      - ".github/workflows/terraform.yml"
  # Uncomment the following lines to enable pull request workflows
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - "aws/**"

permissions:
  id-token: write # Required for AWS OIDC
  contents: read # Required to checkout the repo
  pull-requests: write # Required to comment on PRs with the terraform plan

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Terraform Backend Credentials
        id: backend-creds
        uses: aws-actions/configure-aws-credentials@main
        with:
          role-to-assume: arn:aws:iam::021874127869:role/s3_backend
          aws-region: us-east-1
          role-session-name: s3-backend
          output-credentials: true
          output-env-credentials: false
          unset-current-credentials: true

      - name: Store Backend Credentials in profile
        run: |
          aws configure set aws_access_key_id ${{ steps.backend-creds.outputs.aws-access-key-id }} --profile s3-backend
          aws configure set aws_secret_access_key ${{ steps.backend-creds.outputs.aws-secret-access-key }} --profile s3-backend
          aws configure set aws_session_token ${{ steps.backend-creds.outputs.aws-session-token }} --profile s3-backend

      - name: Check AWS Credentials for S3 Backend
        run: aws sts get-caller-identity --profile s3-backend

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@main
        with:
          role-to-assume: arn:aws:iam::021874127869:role/github-actions-oidc-role
          aws-region: us-east-1
          unset-current-credentials: true

      - name: Check AWS Credentials for S3 Backend (temp)
        run: aws sts get-caller-identity --profile s3-backend

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Install TF scripts
        run: |
          git clone https://github.com/leecookson/tf-scripts.git
          chmod +x tf-scripts/bin/*
          echo "$(pwd)/tf-scripts/bin" >> $GITHUB_PATH

      - name: Terraform Plan
        id: plan
        run: tfplan aws

        continue-on-error: false
